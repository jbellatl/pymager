Features
========
* Ability to resize and serve any picture supported by PIL
* HTTP caching support (If-Modified-since / Last-Modified header, + Apache mod_headers)
* Supports all databases supported by SQL Alchemy
* can be deployed standalone (for development purposes) as well as behind Apache using mod_wsgi
* RESTful interface, URLs, and returns HTTP Error codes (see error codes below)
* Is supposed to handle locking correctly in case of pending requests for the same not-yet-processed derived image

Install Dependencies
$ sudo apt-get install python2.5 python-imaging python-sqlalchemy python-pysqlite2 python-psycopg2 python-zopeinterface python-twisted-core python-twisted-web2 python-setuptools python-pkg-resources

Run unit tests to make sure everything's fine
$ python setup.py test

Run the service
$ python pymager.py 


HTTP Error Codes that are returned
* 304 : (resource not modified)
* 400 
 - {original} Unsupported Format (POST)
 - DEV: {original} Invalid Multipart request (POST) : only for dev, should never happen if client is coded properly
 - DEV: {derived} Invalid requested format (GET) : only for dev, should never happen if client does not allow requesting unknown image formats
 - DEPRECATED: {original} Supplied ID does not use the correct ID format (POST) (FIXME: should disappear) : should never happen if client API checks ID format before submitting
* 403
 - Resize characteristics not allowed (GET)
* 404
 - {original, derived} Resource does not exist (GET, DELETE) 
 - DEV: {derived} URL decoding error (GET) : should never happen if client generates URLs correctly
* 405
 - DEV: {original, derived}: the supported method is not authorized (e.g. DELETE issues on derived/) should never happen as clients are not supposed to expose more than is currently available
* 409 
 - Image ID already exists (POST)
* 500
 - various, unexpected errors (IO exceptions, etc..)

 
What is not tested automatically (using integration or unit tests)
* everything that is in Apache WSGi configuration (Authentication, Caching, etc..)
* The image resize algorithm (whether it expands the image correctly, shrinks it correctly, etc..)
* 